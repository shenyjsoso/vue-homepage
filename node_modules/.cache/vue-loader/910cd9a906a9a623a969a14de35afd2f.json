{"remainingRequest":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/soso/hygst/HOMEPAGE/homepage-web/src/components/Dashboard/Ring.vue?vue&type=style&index=0&id=74300601&lang=less&scoped=true&","dependencies":[{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/src/components/Dashboard/Ring.vue","mtime":1589423245470},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi8vQGltcG9ydCB1cmwoKTsg5byV5YWl5YWs5YWxY3Nz57G7Ci5yaW5nIHsKICBiYWNrZ3JvdW5kOiAjZmZmOwogIC8vIHdpZHRoOiAzNjBweDsKICBtaW4td2lkdGg6IDM1MHB4OwogIGZsZXg6IDE7CiAgaGVpZ2h0OiAzNjlweDsKfQouaGVhZCB7CiAgaGVpZ2h0OiA2MHB4OwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgbWFyZ2luOiAwIDI0cHg7CgogIC50aXR0bGUgewogICAgZm9udC1zaXplOiAxNnB4OwogICAgZm9udC1mYW1pbHk6IE1pY3Jvc29mdFlhSGVpU2VtaWJvbGQ7CiAgICBjb2xvcjogcmdiYSgzOCwgMzgsIDM4LCAxKTsKICB9CiAgLm1vbmV5IHsKICAgIGZvbnQtc2l6ZTogMjhweDsKICAgIGZvbnQtZmFtaWx5OiBBcmlhbE1UOwogICAgY29sb3I6IHJnYmEoMzgsIDM4LCAzOCwgMSk7CiAgfQp9CgouZWwtZGl2aWRlci0taG9yaXpvbnRhbCB7CiAgbWFyZ2luOiAwIDAgMTBweCAwOwp9Cg=="},{"version":3,"sources":["Ring.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Ring.vue","sourceRoot":"src/components/Dashboard","sourcesContent":["<!-- 环图数据展示块 -->\n<template>\n  <div class=\"ring\">\n    <div class=\"head\">\n      <span class=\"tittle\">{{tittle}}</span>\n      <span class=\"money\">{{money}}万元</span>\n    </div>\n    <el-divider></el-divider>\n    <ve-ring :data=\"chartData\" :settings=\"chartSettings\" :extend=\"chartExtend\" v-loading=\"loading\"></ve-ring>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    (this.chartSettings = {\n      radius: [65, 100],\n      offsetY: 120,\n      //  center: ['50%',20],\n      label: {\n        //show: false,\n        // position: 'bottom',\n        formatter: \"{b}\\n{d}%\"\n      }\n    }),\n      (this.chartExtend = {\n        series: {},\n        tooltip: {},\n        grid: {},\n        legend: {\n          icon: \"circle\",\n          y: 260\n        }\n      });\n\n    return {\n      chartData: {\n        columns: [\"类型\", \"收入\"],\n        rows: [\n        //   { 类型: \"挂号收入\", 收入: 1393 },\n        //   { 类型: \"医疗收入\", 收入: 3530 },\n        //   { 类型: \"药品收入\", 收入: 2923 }\n        ]\n      },\n      money:0, //金额\n    };\n  },\n  props: {\n    tittle: String,\n    rows: Object,\n    loading: Boolean\n  },\n  //计算属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    rows: function() {\n        this.chartData.rows=[];\n      if (this.tittle == \"门诊收入\") {\n          this.money=this.rows?.mzFee||0;\n          this.chartData.rows.push({类型:'药品收入',收入:this.rows?.mzYpFee||0});\n          this.chartData.rows.push({类型:'医疗收入',收入:this.rows?.mzYlFee||0});\n          console.log(this.chartData);\n          \n\n      } else if (this.tittle == \"住院收入\") {\n          this.money=this.rows?.zyFee||0;\n          this.chartData.rows.push({类型:'药品收入',收入:this.rows?.zyYpFee||0});\n          this.chartData.rows.push({类型:'医疗收入',收入:this.rows?.zyYlFee||0});\n          \n      } else if (this.tittle == \"全院收入\") {\n         this.money=this.rows?.allFee||0;\n          this.chartData.rows.push({类型:'药品收入',收入:this.rows?.allYpFee||0});\n          this.chartData.rows.push({类型:'医疗收入',收入:this.rows?.allYlFee||0});\n      }\n    }\n  },\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang='less' scoped>\n//@import url(); 引入公共css类\n.ring {\n  background: #fff;\n  // width: 360px;\n  min-width: 350px;\n  flex: 1;\n  height: 369px;\n}\n.head {\n  height: 60px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 24px;\n\n  .tittle {\n    font-size: 16px;\n    font-family: MicrosoftYaHeiSemibold;\n    color: rgba(38, 38, 38, 1);\n  }\n  .money {\n    font-size: 28px;\n    font-family: ArialMT;\n    color: rgba(38, 38, 38, 1);\n  }\n}\n\n.el-divider--horizontal {\n  margin: 0 0 10px 0;\n}\n</style>"]}]}