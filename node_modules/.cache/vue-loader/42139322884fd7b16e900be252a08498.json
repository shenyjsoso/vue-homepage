{"remainingRequest":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/soso/hygst/HOMEPAGE/homepage-web/src/components/Dashboard/Bar.vue?vue&type=style&index=0&id=42fbac10&lang=less&scoped=true&","dependencies":[{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/src/components/Dashboard/Bar.vue","mtime":1588903465401},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi8vQGltcG9ydCB1cmwoKTsg5byV5YWl5YWs5YWxY3Nz57G7Ci5iYXJ7CiAgICAvLyB3aWR0aDoxMDAlOwogICAgZmxleDogMTsKICAgIG1pbi13aWR0aDogMzYwcHg7CiAgICAvLyBoZWlnaHQ6MzY0cHg7CiAgICBiYWNrZ3JvdW5kOnJnYmEoMjU1LDI1NSwyNTUsMSk7Cn0KLmhlYWR7CiAgICBoZWlnaHQ6IDYwcHg7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgbWFyZ2luOiAwIDI0cHg7CiAgIAogICAgLnRpdHRsZXsKICAgICAgICBmb250LXNpemU6IDE2cHg7CiAgICAgICAgZm9udC1mYW1pbHk6TWljcm9zb2Z0WWFIZWlTZW1pYm9sZDsKICAgICAgICBjb2xvcjpyZ2JhKDM4LDM4LDM4LDEpOwogICAgfQogICAgLm51bWJlcnsKICAgICAgICBmb250LXNpemU6IDI4cHg7CiAgICAgICAgZm9udC1mYW1pbHk6QXJpYWxNVDsKICAgICAgICBjb2xvcjpyZ2JhKDM4LDM4LDM4LDEpOwogICAgfQp9Cg=="},{"version":3,"sources":["Bar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Bar.vue","sourceRoot":"src/components/Dashboard","sourcesContent":["<!-- 条形图 -->\n<template>\n<div class='bar'>\n      <div class=\"head\">\n        <span class=\"tittle\">消息总量</span>\n        <span class=\"number\">63021</span>\n    </div>\n    <ve-bar :data=\"chartData\" :settings=\"chartSettings\" :extend=\"chartExtend\"></ve-bar>\n</div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n\nexport default {\n//import引入的组件需要注入到对象中才能使用\n    components: {\n\n    },\n    data() {\n    //这里存放数据\n        this.chartSettings = {\n            metrics: ['消息量'],\n            dataOrder: {\n                label: '消息量',\n                order: 'desc'\n            },\n            itemStyle:{\n                color:'#5B8FF9', \n            },\n            label:{\n                show:true,\n                position:'right',\n                formatter: '{c}',\n                color:'#595959'\n            }\n        },\n        this.chartExtend= {\n                series: {\n                    showBackground:true,\n                    backgroundStyle:{color:'#F1F4F6'}\n                },\n                tooltip: {},\n                grid: {\n                    //x:150,  //左留白\n                    y:0,   //上留白\n                    x2:15,  //右留白\n                    // y2:100  \n                },\n                legend: {\n                    show:false\n                },\n                xAxis:{\n                    splitLine:{\n                        show:false\n                    }\n                }\n             \n             \n        }\n        return {\n            chartData: {\n                columns: ['类型', '消息量'],\n                rows: [\n                    { '类型': '全区卫生机构', '消息量': 33 },\n                    { '类型': '消息适配器接口', '消息量': 22},\n                    { '类型': '公共卫生-建档查询', '消息量': 448 },\n                    { '类型': '公共卫生=慢随访接口', '消息量': 176 },\n                    { '类型': '家庭医生接口', '消息量': 45},\n                    { '类型': '人力资源接口', '消息量': 222},\n                    { '类型': '死亡人口接口', '消息量': 377},\n                    { '类型': '公共卫生-人群接口', '消息量': 11},\n                    { '类型': '死亡人口接口', '消息量': 377},\n                    { '类型': '公共卫生-人群接口', '消息量': 11},\n                    { '类型': '死亡人口接口', '消息量': 377},\n                    { '类型': '公共卫生-人群接口', '消息量': 11},\n                ]\n            }\n        };\n    },\n    props: {\n    },\n    //计算属性 类似于data概念\n    computed: {\n\n    },\n    //监控data中的数据变化\n    watch: {\n\n    },\n    //方法集合\n    methods: {\n\n    },\n    //生命周期 - 创建完成（可以访问当前this实例）\n    created() {\n\n    },\n    //生命周期 - 挂载完成（可以访问DOM元素）\n    mounted() {\n\n    },\n    beforeCreate() {}, //生命周期 - 创建之前\n    beforeMount() {}, //生命周期 - 挂载之前\n    beforeUpdate() {}, //生命周期 - 更新之前\n    updated() {}, //生命周期 - 更新之后\n    beforeDestroy() {}, //生命周期 - 销毁之前\n    destroyed() {}, //生命周期 - 销毁完成\n    activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n}\n</script>\n<style lang='less' scoped>\n//@import url(); 引入公共css类\n.bar{\n    // width:100%;\n    flex: 1;\n    min-width: 360px;\n    // height:364px;\n    background:rgba(255,255,255,1);\n}\n.head{\n    height: 60px;\n    display: flex;\n    justify-content:space-between;\n    align-items: center;\n    margin: 0 24px;\n   \n    .tittle{\n        font-size: 16px;\n        font-family:MicrosoftYaHeiSemibold;\n        color:rgba(38,38,38,1);\n    }\n    .number{\n        font-size: 28px;\n        font-family:ArialMT;\n        color:rgba(38,38,38,1);\n    }\n}\n</style>"]}]}