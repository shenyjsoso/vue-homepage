{"remainingRequest":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/soso/hygst/HOMEPAGE/homepage-web/src/components/Dashboard/Histogram.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/src/components/Dashboard/Histogram.vue","mtime":1588907355404},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8v6L+Z6YeM5Y+v5Lul5a+85YWl5YW25LuW5paH5Lu277yI5q+U5aaC77ya57uE5Lu277yM5bel5YW3anPvvIznrKzkuInmlrnmj5Lku7Zqc++8jGpzb27mlofku7bvvIzlm77niYfmlofku7bnrYnnrYnvvIkKCmV4cG9ydCBkZWZhdWx0IHsKLy9pbXBvcnTlvJXlhaXnmoTnu4Tku7bpnIDopoHms6jlhaXliLDlr7nosaHkuK3miY3og73kvb/nlKgKICAgIGNvbXBvbmVudHM6IHsKCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICAvL+i/memHjOWtmOaUvuaVsOaNrgogICAgICAgIHRoaXMuY2hhcnRTZXR0aW5ncyA9IHsKICAgICAgICAgICAgLy8geEF4aXNUeXBlOiAndmFsdWUnLAogICAgICAgICAgICBpdGVtU3R5bGU6ewogICAgICAgICAgICAgICAgY29sb3I6JyM1QjhGRjknLCAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYXhpc1NpdGU6IHsgcmlnaHQ6IFsn5pe26Ze0J10gfSwKICAgICAgICAgICAgeUF4aXNUeXBlOiBbJ3ZhbHVlJywgJ3ZhbHVlJ10sCiAgICAgICAgICAgIHlBeGlzTmFtZTogWyfmlbDph48nLCAn5pe26Ze0J10sCiAgICAgICAgICAgIGxhYmVsOnsKICAgICAgICAgICAgICAgIHNob3c6dHJ1ZSwKICAgICAgICAgICAgICAgIHBvc2l0aW9uOid0b3AnLAogICAgICAgICAgICAgICAgZm9ybWF0dGVyOiAne2N9JywKICAgICAgICAgICAgICAgIGNvbG9yOicjNTk1OTU5JwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHRoaXMuY2hhcnRFeHRlbmQ9IHsKICAgICAgICAgICAgICAgIHNlcmllczoge30sCiAgICAgICAgICAgICAgICB0b29sdGlwOiB7fSwKICAgICAgICAgICAgICAgIGdyaWQ6IHsKICAgICAgICAgICAgICAgIC8vICB4OjE1MCwgIC8v5bem55WZ55m9CiAgICAgICAgICAgICAgICAgICAgeTozNSwgICAvL+S4iueVmeeZvQogICAgICAgICAgICAgICAgICAgIHgyOjE1LCAgLy/lj7PnlZnnmb0KICAgICAgICAgICAgICAgICAgICAvLyB5MjoxMDAgIAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICAgICAgICAgIHNob3c6ZmFsc2UKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB4QXhpczp7CiAgICAgICAgICAgICAgICAgICAgc3BsaXRMaW5lOnsKICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzpmYWxzZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vIHlBeGlzOlt7CiAgICAgICAgICAgICAgICAvLyAgICAgbmFtZTon5oC76YePJywKICAgICAgICAgICAgICAgIC8vICAgICB0eXBlOid2YWx1ZScKICAgICAgICAgICAgICAgIC8vIH0sewogICAgICAgICAgICAgICAgLy8gICAgIG5hbWU6J+iAl+aXticsCiAgICAgICAgICAgICAgICAvLyAgICAgdHlwZTondmFsdWUnCiAgICAgICAgICAgICAgICAvLyB9XQogICAgICAgICAgICB9CiAgICAgICAgcmV0dXJuIHsKICAgICAgICBjaGFydERhdGE6IHsKICAgICAgICAgIGNvbHVtbnM6IFsn57G75Z6LJywgJ+a2iOaBr+mHjycsICfml7bpl7QnXSwKICAgICAgICAgIHJvd3M6IFsKICAgICAgICAgICAgeyAn57G75Z6LJzogJ+ebkeaOp+aAu+mHjycsICfmtojmga/ph48nOiAxMzkzLCAgfSwKICAgICAgICAgICAgeyAn57G75Z6LJzogJ01R5oC76YePJywgJ+a2iOaBr+mHjyc6IDM1MzAsICB9LAogICAgICAgICAgICB7ICfnsbvlnosnOiAnV1PmgLvph48nLCAn5raI5oGv6YePJzogMjkyMywgICB9LAogICAgICAgICAgICB7ICfnsbvlnosnOiAn5byC5bi45raI5oGv6YePJywgJ+a2iOaBr+mHjyc6IDE3MjMsIH0sCiAgICAgICAgICAgIHsgJ+exu+Weiyc6ICflubPlnYfogJfml7YnLCAgICfml7bpl7QnOiAxMSB9LAogICAgICAgICAgICB7ICfnsbvlnosnOiAn5pyA5aSn6ICX5pe2JywgICAn5pe26Ze0JzogMjEgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgICB9OwogICAgfSwKICAgIHByb3BzOiB7CiAgICB9LAogICAgLy/orqHnrpflsZ7mgKcg57G75Ly85LqOZGF0YeamguW/tQogICAgY29tcHV0ZWQ6IHsKCiAgICB9LAogICAgLy/nm5HmjqdkYXRh5Lit55qE5pWw5o2u5Y+Y5YyWCiAgICB3YXRjaDogewoKICAgIH0sCiAgICAvL+aWueazlembhuWQiAogICAgbWV0aG9kczogewoKICAgIH0sCiAgICAvL+eUn+WRveWRqOacnyAtIOWIm+W7uuWujOaIkO+8iOWPr+S7peiuv+mXruW9k+WJjXRoaXPlrp7kvovvvIkKICAgIGNyZWF0ZWQoKSB7CgogICAgfSwKICAgIC8v55Sf5ZG95ZGo5pyfIC0g5oyC6L295a6M5oiQ77yI5Y+v5Lul6K6/6ZeuRE9N5YWD57Sg77yJCiAgICBtb3VudGVkKCkgewoKICAgIH0sCiAgICBiZWZvcmVDcmVhdGUoKSB7fSwgLy/nlJ/lkb3lkajmnJ8gLSDliJvlu7rkuYvliY0KICAgIGJlZm9yZU1vdW50KCkge30sIC8v55Sf5ZG95ZGo5pyfIC0g5oyC6L295LmL5YmNCiAgICBiZWZvcmVVcGRhdGUoKSB7fSwgLy/nlJ/lkb3lkajmnJ8gLSDmm7TmlrDkuYvliY0KICAgIHVwZGF0ZWQoKSB7fSwgLy/nlJ/lkb3lkajmnJ8gLSDmm7TmlrDkuYvlkI4KICAgIGJlZm9yZURlc3Ryb3koKSB7fSwgLy/nlJ/lkb3lkajmnJ8gLSDplIDmr4HkuYvliY0KICAgIGRlc3Ryb3llZCgpIHt9LCAvL+eUn+WRveWRqOacnyAtIOmUgOavgeWujOaIkAogICAgYWN0aXZhdGVkKCkge30sIC8v5aaC5p6c6aG16Z2i5pyJa2VlcC1hbGl2Zee8k+WtmOWKn+iDve+8jOi/meS4quWHveaVsOS8muinpuWPkQp9Cg=="},{"version":3,"sources":["Histogram.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Histogram.vue","sourceRoot":"src/components/Dashboard","sourcesContent":["<!-- 柱状图 -->\n<template>\n<div class='histogram'>\n     <div class=\"head\">\n        <span class=\"tittle\">监控消息总量</span>\n    \n    </div>\n    <ve-histogram :data=\"chartData\" :settings=\"chartSettings\" :extend=\"chartExtend\"></ve-histogram>\n    \n</div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n\nexport default {\n//import引入的组件需要注入到对象中才能使用\n    components: {\n\n    },\n    data() {\n        //这里存放数据\n        this.chartSettings = {\n            // xAxisType: 'value',\n            itemStyle:{\n                color:'#5B8FF9', \n            },\n            axisSite: { right: ['时间'] },\n            yAxisType: ['value', 'value'],\n            yAxisName: ['数量', '时间'],\n            label:{\n                show:true,\n                position:'top',\n                formatter: '{c}',\n                color:'#595959'\n            }\n        }\n        this.chartExtend= {\n                series: {},\n                tooltip: {},\n                grid: {\n                //  x:150,  //左留白\n                    y:35,   //上留白\n                    x2:15,  //右留白\n                    // y2:100  \n                },\n                legend: {\n                    show:false\n                },\n                xAxis:{\n                    splitLine:{\n                        show:false\n                    }\n                }\n                // yAxis:[{\n                //     name:'总量',\n                //     type:'value'\n                // },{\n                //     name:'耗时',\n                //     type:'value'\n                // }]\n            }\n        return {\n        chartData: {\n          columns: ['类型', '消息量', '时间'],\n          rows: [\n            { '类型': '监控总量', '消息量': 1393,  },\n            { '类型': 'MQ总量', '消息量': 3530,  },\n            { '类型': 'WS总量', '消息量': 2923,   },\n            { '类型': '异常消息量', '消息量': 1723, },\n            { '类型': '平均耗时',   '时间': 11 },\n            { '类型': '最大耗时',   '时间': 21 }\n          ]\n        }\n        };\n    },\n    props: {\n    },\n    //计算属性 类似于data概念\n    computed: {\n\n    },\n    //监控data中的数据变化\n    watch: {\n\n    },\n    //方法集合\n    methods: {\n\n    },\n    //生命周期 - 创建完成（可以访问当前this实例）\n    created() {\n\n    },\n    //生命周期 - 挂载完成（可以访问DOM元素）\n    mounted() {\n\n    },\n    beforeCreate() {}, //生命周期 - 创建之前\n    beforeMount() {}, //生命周期 - 挂载之前\n    beforeUpdate() {}, //生命周期 - 更新之前\n    updated() {}, //生命周期 - 更新之后\n    beforeDestroy() {}, //生命周期 - 销毁之前\n    destroyed() {}, //生命周期 - 销毁完成\n    activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n}\n</script>\n<style lang='less' scoped>\n//@import url(); 引入公共css类\n.histogram{\n    flex: 1;\n    // width:100%;\n    // height:364px;\n    min-width: 360px;\n    background:rgba(255,255,255,1);\n}\n.head{\n    height: 60px;\n    display: flex;\n    justify-content:start;\n    align-items: center;\n    margin: 0 24px;\n   \n    .tittle{\n        font-size: 16px;\n        font-family:MicrosoftYaHeiSemibold;\n        color:rgba(38,38,38,1);\n    }\n  \n}\n</style>"]}]}