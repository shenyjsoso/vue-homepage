{"remainingRequest":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/soso/hygst/HOMEPAGE/homepage-web/src/components/Dashboard/TableServerState.vue?vue&type=style&index=0&id=7cad914b&lang=less&scoped=true&","dependencies":[{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/src/components/Dashboard/TableServerState.vue","mtime":1589784963897},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLy9AaW1wb3J0IHVybCgpOyDlvJXlhaXlhazlhbFjc3PnsbsKLnRhYmxlewogICAgYmFja2dyb3VuZDogI2ZmZjsKICAgIC8vIHdpZHRoOiAzNjBweDsKICAgIGhlaWdodDogMzY5cHg7CiAgICBmbGV4OiAxOyAgCiAgICBvdmVyZmxvdy15OiBvdmVybGF5OwogICAgbWluLXdpZHRoOiAzNjBweDsKfQouaGVhZHsKICAgIGhlaWdodDogNTBweDsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBtYXJnaW46ICAxMHB4IDI0cHggMCAyNHB4OwogICAKICAgIC50aXR0bGV7CiAgICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgICAgIGZvbnQtZmFtaWx5Ok1pY3Jvc29mdFlhSGVpU2VtaWJvbGQ7CiAgICAgICAgY29sb3I6cmdiKDc3LCA0MiwgNDIpOwogICAgfQogICAgLm51bWJlcnsKICAgICAgICBmb250LXNpemU6IDI0cHg7CiAgICAgICAgZm9udC1mYW1pbHk6QXJpYWxNVDsKICAgICAgICBjb2xvcjojRkY0RDRGOwogICAgfQp9Ci50YWJsZWNvbnRlbnR7CiAgICBtYXJnaW46IDAgMjRweDsgIAp9Cgo="},{"version":3,"sources":["TableServerState.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TableServerState.vue","sourceRoot":"src/components/Dashboard","sourcesContent":["<!-- 管理员页面 平台服务器状态 -->\n<template>\n<div class='table'>\n     <div class=\"head\">\n        <span class=\"tittle\">平台服务器状态</span>\n     \n    </div>\n    <div class=\"tablecontent\">\n        <el-table\n        \n            :data=\"rows\"\n            height=300\n            style=\"width: 100%\"\n            header-row-class-name=\"tableHeader\"\n            :cell-style=\"tabRowStyle\"\n            v-loading=\"loading\"\n            size=‘medium’\n            >\n\n            <el-table-column\n            prop=\"ip\"\n            label=\"IP\"\n            >\n             <!-- <template slot-scope=\"scope\">\n                <span v-if=\"scope.row.ip\" >{{scope.row.ip}}</span>\n            </template> -->\n            </el-table-column>\n\n            <el-table-column\n            prop=\"port\"\n            label=\"端口\"\n            >\n            </el-table-column>\n\n            <el-table-column\n            prop=\"state\"\n            label=\"状态\">\n            <template slot-scope=\"scope\">\n                <el-tag\n                :type=\"scope.row.state == '1' ? '' : 'danger'\"\n                disable-transitions>{{scope.row.state=='1'?'正常':'异常'}}</el-tag>\n            </template>\n            </el-table-column>\n\n         </el-table>\n    </div>\n\n</div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n\nexport default {\n//import引入的组件需要注入到对象中才能使用\n    components: {\n\n    },\n    data() {\n    //这里存放数据\n        return {\n            \n        };\n    },\n    props: {\n        rows:Array,\n        loading:Boolean,\n    },\n    //计算属性 类似于data概念\n    computed: {\n\n    },\n    //监控data中的数据变化\n    watch: {\n\n    },\n    //方法集合\n    methods: {\n        tabRowStyle({rowIndex}){\n            let index = rowIndex + 1;\n            if(index %2 == 0){\n                return 'background:#F9FCFF'\n            }\n        }\n\n    },\n    //生命周期 - 创建完成（可以访问当前this实例）\n    created() {\n\n    },\n    //生命周期 - 挂载完成（可以访问DOM元素）\n    mounted() {\n        // console.log(this.rows);\n        \n    },\n    beforeCreate() {}, //生命周期 - 创建之前\n    beforeMount() {}, //生命周期 - 挂载之前\n    beforeUpdate() {}, //生命周期 - 更新之前\n    updated() {}, //生命周期 - 更新之后\n    beforeDestroy() {}, //生命周期 - 销毁之前\n    destroyed() {}, //生命周期 - 销毁完成\n    activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n}\n</script>\n<style lang='less' scoped>\n//@import url(); 引入公共css类\n.table{\n    background: #fff;\n    // width: 360px;\n    height: 369px;\n    flex: 1;  \n    overflow-y: overlay;\n    min-width: 360px;\n}\n.head{\n    height: 50px;\n    display: flex;\n    justify-content:space-between;\n    align-items: center;\n    margin:  10px 24px 0 24px;\n   \n    .tittle{\n        font-size: 16px;\n        font-family:MicrosoftYaHeiSemibold;\n        color:rgb(77, 42, 42);\n    }\n    .number{\n        font-size: 24px;\n        font-family:ArialMT;\n        color:#FF4D4F;\n    }\n}\n.tablecontent{\n    margin: 0 24px;  \n}\n\n</style>"]}]}