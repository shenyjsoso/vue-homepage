{"remainingRequest":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/soso/hygst/HOMEPAGE/homepage-web/src/components/Dashboard/Histogram.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/src/components/Dashboard/Histogram.vue","mtime":1589438621938},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Histogram.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"Histogram.vue","sourceRoot":"src/components/Dashboard","sourcesContent":["<!-- 柱状图 -->\n<template>\n<div class='histogram'>\n     <div class=\"head\">\n        <span class=\"tittle\">监控消息总量</span>\n        <div class=\"tag\">\n           <div>\n               <div style=\"width:8px;height:8px;background:#73DEB3\"></div>\n               <span>昨日</span> \n           </div>\n           <div >\n               <div style=\"width:8px;height:8px;background:#73A0FA\"></div>\n               <span>当日</span> \n           </div>\n        </div>\n    </div>\n    <ve-histogram :data=\"chartData\" :settings=\"chartSettings\" :extend=\"chartExtend\" v-loading=\"loading\"></ve-histogram>\n    <!-- <span class=\"empty\" v-if=\"chartData.rows.length==0\">暂无数据</span> -->\n    <img class=\"empty\" v-if=\"chartData.rows.length==0\" src=\"@/assets/img/wushuju.png\" alt=\"\">\n</div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n\nexport default {\n//import引入的组件需要注入到对象中才能使用\n    components: {\n\n    },\n    data() {\n        //这里存放数据\n        this.chartSettings = {\n            // itemStyle:{\n            //     color:'#5B8FF9', \n            // },\n            axisSite: { right: ['昨日时间','当日时间'] },\n            yAxisType: ['normal', 'normal'],\n            yAxisName: ['数量', '时间'],\n            label:{\n                show:true,\n                position:'top',\n                formatter: '{c}',\n                color:'#595959'\n            }\n        }\n        this.chartExtend= {\n                series: {\n                    barWidth: 18, //这就是宽度\n                    barGap:'5%',//柱图间距\n                },\n                'yAxis.1.axisLabel.formatter': \"{value}s\",\n                color: [\"#73DEB3\", \"#5B8FF9\", \"#73DEB3\", \"#5B8FF9\"],\n                grid: {\n                    x:20,  //左留白\n                    y:30,   //上留白\n                    x2:20,  //右留白\n                    // y2:-30  \n                    // left:'10%'\n                    // containLabel:false,\n                },\n                legend: {\n                    show:false\n                },\n                tooltip:{\n                     show:false,\n                    // axisPointer:{\n                    //     type:false\n                    // }\n                    // formatter: '{b0}: {c0}<br />{b1}: {c1}'\n               \n                },\n                \n                xAxis:{\n                    splitLine:{\n                        show:false\n                    },\n                    axisLabel:{\n                        interval: 0,\n                        textStyle:{\n                            fontSize: 12,\n                            fontFamily:'MicrosoftYaHei',\n                            color:'rgba(128,128,128,1)',\n                        },\n                        // formatter: function(value){\n                        //     let result = \"\"; //拼接加\\n返回的类目项\n                        //     let maxLength = 4; //每项显示文字个数\n                        //     let valLength = value.length; //X轴类目项的文字个数\n                        //     let rowNumber = Math.ceil(valLength / maxLength); //类目项需要换行的行数\n                        //     if (rowNumber > 1){\n                        //         //如果文字大于3,\n                        //         for (let i = 0; i < rowNumber; i++) {\n                        //             let temp = \"\"; //每次截取的字符串\n                        //             let start = i * maxLength; //开始截取的位置\n                        //             let end = start + maxLength; //结束截取的位置\n                        //             temp = value.substring(start, end) + \"\\n\";\n                        //             result += temp; //拼接生成最终的字符串\n                        //         }\n                        //         return result;\n                        //     }\n                        //     else {\n                        //     return value;\n                        //     }\n                        // }\n                    }\n                    \n                },\n                yAxis:{\n                    axisLabel:{\n                        textStyle:{\n                            fontSize:12,\n                            fontFamily:'ArialMT',\n                            color:'rgba(128,128,128,1)',\n                        },\n                    },\n                    nameTextStyle:{\n                            fontSize: 12,\n                            fontFamily:'MicrosoftYaHei',\n                            color:'rgba(128,128,128,1)',\n                    }\n                    \n                }\n            }\n        return {\n        chartData: {\n          columns: ['name','昨日消息量','当日消息量','昨日时间','当日时间'],\n          rows: [\n            // { 'name': '监控消息总量', '昨日消息量': 0,'当日消息量':0},\n            // { 'name': 'MQ消息量', '昨日消息量': 0, '当日消息量':0},\n            // { 'name': 'WS消息量', '昨日消息量': 0, '当日消息量':0},\n            // { 'name': '异常消息量', '昨日消息量': 0,'当日消息量':0},\n            // { 'name': '平均耗时',   '昨日时间': 0,'当日时间':0},\n            // { 'name': '最大耗时',   '昨日时间': 0, '当日时间':0}\n          ]\n        }\n        };\n    },\n    props: {\n        loading:Boolean,\n        rows:Array\n    },\n    //计算属性 类似于data概念\n    computed: {\n\n    },\n    //监控data中的数据变化\n    watch: {\n            rows: function(newVal){        \n                this.chartData.rows = []; //清空数据\n                this.chartData.rows.push({'name':'监控消息总量','昨日消息量':newVal[1][\"amount\"],'当日消息量':newVal[0][\"amount\"]})\n                this.chartData.rows.push({'name':'MQ消息量','昨日消息量':newVal[3][\"amount\"],'当日消息量':newVal[2][\"amount\"]});\n                this.chartData.rows.push({'name':'WS消息量','昨日消息量':newVal[5][\"amount\"],'当日消息量':newVal[4][\"amount\"]});\n                this.chartData.rows.push({'name':'异常消息量','昨日消息量':newVal[7][\"amount\"],'当日消息量':newVal[6][\"amount\"]});\n                this.chartData.rows.push({'name':'平均耗时','昨日时间':newVal[9][\"amount\"],'当日时间':newVal[8][\"amount\"]});\n                this.chartData.rows.push({'name':'最大耗时','昨日时间':newVal[11][\"amount\"],'当日时间':newVal[10][\"amount\"]});\n                // this.chartData.rows[0]['当日消息量']=newVal[0][\"amount\"];\n                // this.chartData.rows[0]['昨日消息量']=newVal[1][\"amount\"];\n                // this.chartData.rows[1]['当日消息量']=newVal[2][\"amount\"];\n                // this.chartData.rows[1]['昨日消息量']=newVal[3][\"amount\"];\n                // this.chartData.rows[2]['当日消息量']=newVal[4][\"amount\"];\n                // this.chartData.rows[2]['昨日消息量']=newVal[5][\"amount\"];\n                // this.chartData.rows[3]['当日消息量']=newVal[6][\"amount\"];\n                // this.chartData.rows[3]['昨日消息量']=newVal[7][\"amount\"];\n                // this.chartData.rows[4]['当日时间']=newVal[8][\"amount\"];\n                // this.chartData.rows[4]['昨日时间']=newVal[9][\"amount\"];\n                // this.chartData.rows[5]['当日时间']=newVal[10][\"amount\"];\n                // this.chartData.rows[5]['昨日时间']=newVal[11][\"amount\"];\n\n          \n        }\n    },\n    //方法集合\n    methods: {\n\n    },\n    //生命周期 - 创建完成（可以访问当前this实例）\n    created() {\n\n    },\n    //生命周期 - 挂载完成（可以访问DOM元素）\n    mounted() {\n\n    },\n    beforeCreate() {}, //生命周期 - 创建之前\n    beforeMount() {}, //生命周期 - 挂载之前\n    beforeUpdate() {}, //生命周期 - 更新之前\n    updated() {}, //生命周期 - 更新之后\n    beforeDestroy() {}, //生命周期 - 销毁之前\n    destroyed() {}, //生命周期 - 销毁完成\n    activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n}\n</script>\n<style lang='less' scoped>\n//@import url(); 引入公共css类\n.histogram{\n    flex: 1;\n    // width:100%;\n    // height:364px;\n    min-width: 360px;\n    background:rgba(255,255,255,1);\n    position: relative;\n     .empty {\n    color: #909399;\n    font-size: 12px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 114px;\n    height: 140px;\n  }\n}\n.head{\n    height: 60px;\n    display: flex;\n    justify-content:space-between;\n    align-items: center;\n    margin: 0 24px;\n   \n    .tittle{\n        font-size: 16px;\n        font-family:MicrosoftYaHeiSemibold;\n        color:rgba(38,38,38,1);\n    }\n    .tag{\n        display: flex;\n        justify-content:center;\n        align-items: center;\n        &>div{\n               display: flex;\n                justify-content:center;\n                align-items: center;\n                margin-left: 10px;\n                font-size:12px;\n                font-family:MicrosoftYaHei;\n                color:rgba(140,140,140,1);\n                &>span{\n                    margin-left:5px;\n                }\n        }\n    }\n  \n}\n</style>"]}]}