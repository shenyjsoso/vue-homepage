{"remainingRequest":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/babel-loader/lib/index.js!/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/soso/hygst/HOMEPAGE/homepage-web/src/components/Dashboard/Histogram.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/src/components/Dashboard/Histogram.vue","mtime":1588907355404},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy/ov5nph4zlj6/ku6Xlr7zlhaXlhbbku5bmlofku7bvvIjmr5TlpoLvvJrnu4Tku7bvvIzlt6Xlhbdqc++8jOesrOS4ieaWueaPkuS7tmpz77yManNvbuaWh+S7tu+8jOWbvueJh+aWh+S7tuetieetie+8iQpleHBvcnQgZGVmYXVsdCB7CiAgLy9pbXBvcnTlvJXlhaXnmoTnu4Tku7bpnIDopoHms6jlhaXliLDlr7nosaHkuK3miY3og73kvb/nlKgKICBjb21wb25lbnRzOiB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgLy/ov5nph4zlrZjmlL7mlbDmja4KICAgIHRoaXMuY2hhcnRTZXR0aW5ncyA9IHsKICAgICAgLy8geEF4aXNUeXBlOiAndmFsdWUnLAogICAgICBpdGVtU3R5bGU6IHsKICAgICAgICBjb2xvcjogJyM1QjhGRjknCiAgICAgIH0sCiAgICAgIGF4aXNTaXRlOiB7CiAgICAgICAgcmlnaHQ6IFsn5pe26Ze0J10KICAgICAgfSwKICAgICAgeUF4aXNUeXBlOiBbJ3ZhbHVlJywgJ3ZhbHVlJ10sCiAgICAgIHlBeGlzTmFtZTogWyfmlbDph48nLCAn5pe26Ze0J10sCiAgICAgIGxhYmVsOiB7CiAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICBwb3NpdGlvbjogJ3RvcCcsCiAgICAgICAgZm9ybWF0dGVyOiAne2N9JywKICAgICAgICBjb2xvcjogJyM1OTU5NTknCiAgICAgIH0KICAgIH07CiAgICB0aGlzLmNoYXJ0RXh0ZW5kID0gewogICAgICBzZXJpZXM6IHt9LAogICAgICB0b29sdGlwOiB7fSwKICAgICAgZ3JpZDogewogICAgICAgIC8vICB4OjE1MCwgIC8v5bem55WZ55m9CiAgICAgICAgeTogMzUsCiAgICAgICAgLy/kuIrnlZnnmb0KICAgICAgICB4MjogMTUgLy/lj7PnlZnnmb0KICAgICAgICAvLyB5MjoxMDAgIAoKICAgICAgfSwKICAgICAgbGVnZW5kOiB7CiAgICAgICAgc2hvdzogZmFsc2UKICAgICAgfSwKICAgICAgeEF4aXM6IHsKICAgICAgICBzcGxpdExpbmU6IHsKICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgfQogICAgICB9IC8vIHlBeGlzOlt7CiAgICAgIC8vICAgICBuYW1lOifmgLvph48nLAogICAgICAvLyAgICAgdHlwZTondmFsdWUnCiAgICAgIC8vIH0sewogICAgICAvLyAgICAgbmFtZTon6ICX5pe2JywKICAgICAgLy8gICAgIHR5cGU6J3ZhbHVlJwogICAgICAvLyB9XQoKICAgIH07CiAgICByZXR1cm4gewogICAgICBjaGFydERhdGE6IHsKICAgICAgICBjb2x1bW5zOiBbJ+exu+WeiycsICfmtojmga/ph48nLCAn5pe26Ze0J10sCiAgICAgICAgcm93czogW3sKICAgICAgICAgICfnsbvlnosnOiAn55uR5o6n5oC76YePJywKICAgICAgICAgICfmtojmga/ph48nOiAxMzkzCiAgICAgICAgfSwgewogICAgICAgICAgJ+exu+Weiyc6ICdNUeaAu+mHjycsCiAgICAgICAgICAn5raI5oGv6YePJzogMzUzMAogICAgICAgIH0sIHsKICAgICAgICAgICfnsbvlnosnOiAnV1PmgLvph48nLAogICAgICAgICAgJ+a2iOaBr+mHjyc6IDI5MjMKICAgICAgICB9LCB7CiAgICAgICAgICAn57G75Z6LJzogJ+W8guW4uOa2iOaBr+mHjycsCiAgICAgICAgICAn5raI5oGv6YePJzogMTcyMwogICAgICAgIH0sIHsKICAgICAgICAgICfnsbvlnosnOiAn5bmz5Z2H6ICX5pe2JywKICAgICAgICAgICfml7bpl7QnOiAxMQogICAgICAgIH0sIHsKICAgICAgICAgICfnsbvlnosnOiAn5pyA5aSn6ICX5pe2JywKICAgICAgICAgICfml7bpl7QnOiAyMQogICAgICAgIH1dCiAgICAgIH0KICAgIH07CiAgfSwKICBwcm9wczoge30sCiAgLy/orqHnrpflsZ7mgKcg57G75Ly85LqOZGF0YeamguW/tQogIGNvbXB1dGVkOiB7fSwKICAvL+ebkeaOp2RhdGHkuK3nmoTmlbDmja7lj5jljJYKICB3YXRjaDoge30sCiAgLy/mlrnms5Xpm4blkIgKICBtZXRob2RzOiB7fSwKICAvL+eUn+WRveWRqOacnyAtIOWIm+W7uuWujOaIkO+8iOWPr+S7peiuv+mXruW9k+WJjXRoaXPlrp7kvovvvIkKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkge30sCiAgLy/nlJ/lkb3lkajmnJ8gLSDmjILovb3lrozmiJDvvIjlj6/ku6Xorr/pl65ET03lhYPntKDvvIkKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sCiAgYmVmb3JlQ3JlYXRlOiBmdW5jdGlvbiBiZWZvcmVDcmVhdGUoKSB7fSwKICAvL+eUn+WRveWRqOacnyAtIOWIm+W7uuS5i+WJjQogIGJlZm9yZU1vdW50OiBmdW5jdGlvbiBiZWZvcmVNb3VudCgpIHt9LAogIC8v55Sf5ZG95ZGo5pyfIC0g5oyC6L295LmL5YmNCiAgYmVmb3JlVXBkYXRlOiBmdW5jdGlvbiBiZWZvcmVVcGRhdGUoKSB7fSwKICAvL+eUn+WRveWRqOacnyAtIOabtOaWsOS5i+WJjQogIHVwZGF0ZWQ6IGZ1bmN0aW9uIHVwZGF0ZWQoKSB7fSwKICAvL+eUn+WRveWRqOacnyAtIOabtOaWsOS5i+WQjgogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7fSwKICAvL+eUn+WRveWRqOacnyAtIOmUgOavgeS5i+WJjQogIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkKCkge30sCiAgLy/nlJ/lkb3lkajmnJ8gLSDplIDmr4HlrozmiJAKICBhY3RpdmF0ZWQ6IGZ1bmN0aW9uIGFjdGl2YXRlZCgpIHt9IC8v5aaC5p6c6aG16Z2i5pyJa2VlcC1hbGl2Zee8k+WtmOWKn+iDve+8jOi/meS4quWHveaVsOS8muinpuWPkQoKfTs="},{"version":3,"sources":["Histogram.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA;AAEA,eAAA;AACA;AACA,EAAA,UAAA,EAAA,EAFA;AAKA,EAAA,IALA,kBAKA;AACA;AACA,SAAA,aAAA,GAAA;AACA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,KAAA,EAAA;AADA,OAFA;AAKA,MAAA,QAAA,EAAA;AAAA,QAAA,KAAA,EAAA,CAAA,IAAA;AAAA,OALA;AAMA,MAAA,SAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CANA;AAOA,MAAA,SAAA,EAAA,CAAA,IAAA,EAAA,IAAA,CAPA;AAQA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA,EAAA,IADA;AAEA,QAAA,QAAA,EAAA,KAFA;AAGA,QAAA,SAAA,EAAA,KAHA;AAIA,QAAA,KAAA,EAAA;AAJA;AARA,KAAA;AAeA,SAAA,WAAA,GAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA;AACA;AACA,QAAA,CAAA,EAAA,EAFA;AAEA;AACA,QAAA,EAAA,EAAA,EAHA,CAGA;AACA;;AAJA,OAHA;AASA,MAAA,MAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA,OATA;AAYA,MAAA,KAAA,EAAA;AACA,QAAA,SAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA;AADA,OAZA,CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAvBA,KAAA;AAyBA,WAAA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,OAAA,EAAA,CAAA,IAAA,EAAA,KAAA,EAAA,IAAA,CADA;AAEA,QAAA,IAAA,EAAA,CACA;AAAA,gBAAA,MAAA;AAAA,iBAAA;AAAA,SADA,EAEA;AAAA,gBAAA,MAAA;AAAA,iBAAA;AAAA,SAFA,EAGA;AAAA,gBAAA,MAAA;AAAA,iBAAA;AAAA,SAHA,EAIA;AAAA,gBAAA,OAAA;AAAA,iBAAA;AAAA,SAJA,EAKA;AAAA,gBAAA,MAAA;AAAA,gBAAA;AAAA,SALA,EAMA;AAAA,gBAAA,MAAA;AAAA,gBAAA;AAAA,SANA;AAFA;AADA,KAAA;AAaA,GA5DA;AA6DA,EAAA,KAAA,EAAA,EA7DA;AA+DA;AACA,EAAA,QAAA,EAAA,EAhEA;AAmEA;AACA,EAAA,KAAA,EAAA,EApEA;AAuEA;AACA,EAAA,OAAA,EAAA,EAxEA;AA2EA;AACA,EAAA,OA5EA,qBA4EA,CAEA,CA9EA;AA+EA;AACA,EAAA,OAhFA,qBAgFA,CAEA,CAlFA;AAmFA,EAAA,YAnFA,0BAmFA,CAAA,CAnFA;AAmFA;AACA,EAAA,WApFA,yBAoFA,CAAA,CApFA;AAoFA;AACA,EAAA,YArFA,0BAqFA,CAAA,CArFA;AAqFA;AACA,EAAA,OAtFA,qBAsFA,CAAA,CAtFA;AAsFA;AACA,EAAA,aAvFA,2BAuFA,CAAA,CAvFA;AAuFA;AACA,EAAA,SAxFA,uBAwFA,CAAA,CAxFA;AAwFA;AACA,EAAA,SAzFA,uBAyFA,CAAA,CAzFA,CAyFA;;AAzFA,CAAA","sourcesContent":["<!-- 柱状图 -->\n<template>\n<div class='histogram'>\n     <div class=\"head\">\n        <span class=\"tittle\">监控消息总量</span>\n    \n    </div>\n    <ve-histogram :data=\"chartData\" :settings=\"chartSettings\" :extend=\"chartExtend\"></ve-histogram>\n    \n</div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n\nexport default {\n//import引入的组件需要注入到对象中才能使用\n    components: {\n\n    },\n    data() {\n        //这里存放数据\n        this.chartSettings = {\n            // xAxisType: 'value',\n            itemStyle:{\n                color:'#5B8FF9', \n            },\n            axisSite: { right: ['时间'] },\n            yAxisType: ['value', 'value'],\n            yAxisName: ['数量', '时间'],\n            label:{\n                show:true,\n                position:'top',\n                formatter: '{c}',\n                color:'#595959'\n            }\n        }\n        this.chartExtend= {\n                series: {},\n                tooltip: {},\n                grid: {\n                //  x:150,  //左留白\n                    y:35,   //上留白\n                    x2:15,  //右留白\n                    // y2:100  \n                },\n                legend: {\n                    show:false\n                },\n                xAxis:{\n                    splitLine:{\n                        show:false\n                    }\n                }\n                // yAxis:[{\n                //     name:'总量',\n                //     type:'value'\n                // },{\n                //     name:'耗时',\n                //     type:'value'\n                // }]\n            }\n        return {\n        chartData: {\n          columns: ['类型', '消息量', '时间'],\n          rows: [\n            { '类型': '监控总量', '消息量': 1393,  },\n            { '类型': 'MQ总量', '消息量': 3530,  },\n            { '类型': 'WS总量', '消息量': 2923,   },\n            { '类型': '异常消息量', '消息量': 1723, },\n            { '类型': '平均耗时',   '时间': 11 },\n            { '类型': '最大耗时',   '时间': 21 }\n          ]\n        }\n        };\n    },\n    props: {\n    },\n    //计算属性 类似于data概念\n    computed: {\n\n    },\n    //监控data中的数据变化\n    watch: {\n\n    },\n    //方法集合\n    methods: {\n\n    },\n    //生命周期 - 创建完成（可以访问当前this实例）\n    created() {\n\n    },\n    //生命周期 - 挂载完成（可以访问DOM元素）\n    mounted() {\n\n    },\n    beforeCreate() {}, //生命周期 - 创建之前\n    beforeMount() {}, //生命周期 - 挂载之前\n    beforeUpdate() {}, //生命周期 - 更新之前\n    updated() {}, //生命周期 - 更新之后\n    beforeDestroy() {}, //生命周期 - 销毁之前\n    destroyed() {}, //生命周期 - 销毁完成\n    activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n}\n</script>\n<style lang='less' scoped>\n//@import url(); 引入公共css类\n.histogram{\n    flex: 1;\n    // width:100%;\n    // height:364px;\n    min-width: 360px;\n    background:rgba(255,255,255,1);\n}\n.head{\n    height: 60px;\n    display: flex;\n    justify-content:start;\n    align-items: center;\n    margin: 0 24px;\n   \n    .tittle{\n        font-size: 16px;\n        font-family:MicrosoftYaHeiSemibold;\n        color:rgba(38,38,38,1);\n    }\n  \n}\n</style>"],"sourceRoot":"src/components/Dashboard"}]}