{"remainingRequest":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/babel-loader/lib/index.js!/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/soso/hygst/HOMEPAGE/homepage-web/src/components/Dashboard/Histogram.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/src/components/Dashboard/Histogram.vue","mtime":1589270251014},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soso/hygst/HOMEPAGE/homepage-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy/ov5nph4zlj6/ku6Xlr7zlhaXlhbbku5bmlofku7bvvIjmr5TlpoLvvJrnu4Tku7bvvIzlt6Xlhbdqc++8jOesrOS4ieaWueaPkuS7tmpz77yManNvbuaWh+S7tu+8jOWbvueJh+aWh+S7tuetieetie+8iQpleHBvcnQgZGVmYXVsdCB7CiAgLy9pbXBvcnTlvJXlhaXnmoTnu4Tku7bpnIDopoHms6jlhaXliLDlr7nosaHkuK3miY3og73kvb/nlKgKICBjb21wb25lbnRzOiB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgLy/ov5nph4zlrZjmlL7mlbDmja4KICAgIHRoaXMuY2hhcnRTZXR0aW5ncyA9IHsKICAgICAgLy8gaXRlbVN0eWxlOnsKICAgICAgLy8gICAgIGNvbG9yOicjNUI4RkY5JywgCiAgICAgIC8vIH0sCiAgICAgIGF4aXNTaXRlOiB7CiAgICAgICAgcmlnaHQ6IFsn5pio5pel5pe26Ze0JywgJ+W9k+aXpeaXtumXtCddCiAgICAgIH0sCiAgICAgIHlBeGlzVHlwZTogWydub3JtYWwnLCAnbm9ybWFsJ10sCiAgICAgIHlBeGlzTmFtZTogWyfmlbDph48nLCAn5pe26Ze0KHMpJ10sCiAgICAgIGxhYmVsOiB7CiAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICBwb3NpdGlvbjogJ3RvcCcsCiAgICAgICAgZm9ybWF0dGVyOiAne2N9JywKICAgICAgICBjb2xvcjogJyM1OTU5NTknCiAgICAgIH0KICAgIH07CiAgICB0aGlzLmNoYXJ0RXh0ZW5kID0gewogICAgICBzZXJpZXM6IHsKICAgICAgICBiYXJXaWR0aDogMTgsCiAgICAgICAgLy/ov5nlsLHmmK/lrr3luqYKICAgICAgICBiYXJHYXA6ICc1JScgLy/mn7Hlm77pl7Tot50KCiAgICAgIH0sCiAgICAgIGNvbG9yOiBbIiM3M0RFQjMiLCAiIzVCOEZGOSIsICIjNzNERUIzIiwgIiM1QjhGRjkiXSwKICAgICAgZ3JpZDogewogICAgICAgIC8vICB4OjE1MCwgIC8v5bem55WZ55m9CiAgICAgICAgeTogMzUsCiAgICAgICAgLy/kuIrnlZnnmb0KICAgICAgICB4MjogMTUgLy/lj7PnlZnnmb0KICAgICAgICAvLyB5MjoxMDAgIAoKICAgICAgfSwKICAgICAgbGVnZW5kOiB7CiAgICAgICAgc2hvdzogZmFsc2UKICAgICAgfSwKICAgICAgdG9vbHRpcDogewogICAgICAgIHNob3c6IGZhbHNlIC8vIGF4aXNQb2ludGVyOnsKICAgICAgICAvLyAgICAgdHlwZTpmYWxzZQogICAgICAgIC8vIH0KICAgICAgICAvLyBmb3JtYXR0ZXI6ICd7YjB9OiB7YzB9PGJyIC8+e2IxfToge2MxfScKCiAgICAgIH0sCiAgICAgIHhBeGlzOiB7CiAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICBpbnRlcnZhbDogMCwKICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICBmb250U2l6ZTogMTIKICAgICAgICAgIH0gLy8gZm9ybWF0dGVyOiBmdW5jdGlvbih2YWx1ZSl7CiAgICAgICAgICAvLyAgICAgbGV0IHJlc3VsdCA9ICIiOyAvL+aLvOaOpeWKoFxu6L+U5Zue55qE57G755uu6aG5CiAgICAgICAgICAvLyAgICAgbGV0IG1heExlbmd0aCA9IDQ7IC8v5q+P6aG55pi+56S65paH5a2X5Liq5pWwCiAgICAgICAgICAvLyAgICAgbGV0IHZhbExlbmd0aCA9IHZhbHVlLmxlbmd0aDsgLy9Y6L2057G755uu6aG555qE5paH5a2X5Liq5pWwCiAgICAgICAgICAvLyAgICAgbGV0IHJvd051bWJlciA9IE1hdGguY2VpbCh2YWxMZW5ndGggLyBtYXhMZW5ndGgpOyAvL+exu+ebrumhuemcgOimgeaNouihjOeahOihjOaVsAogICAgICAgICAgLy8gICAgIGlmIChyb3dOdW1iZXIgPiAxKXsKICAgICAgICAgIC8vICAgICAgICAgLy/lpoLmnpzmloflrZflpKfkuo4zLAogICAgICAgICAgLy8gICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJvd051bWJlcjsgaSsrKSB7CiAgICAgICAgICAvLyAgICAgICAgICAgICBsZXQgdGVtcCA9ICIiOyAvL+avj+asoeaIquWPlueahOWtl+espuS4sgogICAgICAgICAgLy8gICAgICAgICAgICAgbGV0IHN0YXJ0ID0gaSAqIG1heExlbmd0aDsgLy/lvIDlp4vmiKrlj5bnmoTkvY3nva4KICAgICAgICAgIC8vICAgICAgICAgICAgIGxldCBlbmQgPSBzdGFydCArIG1heExlbmd0aDsgLy/nu5PmnZ/miKrlj5bnmoTkvY3nva4KICAgICAgICAgIC8vICAgICAgICAgICAgIHRlbXAgPSB2YWx1ZS5zdWJzdHJpbmcoc3RhcnQsIGVuZCkgKyAiXG4iOwogICAgICAgICAgLy8gICAgICAgICAgICAgcmVzdWx0ICs9IHRlbXA7IC8v5ou85o6l55Sf5oiQ5pyA57uI55qE5a2X56ym5LiyCiAgICAgICAgICAvLyAgICAgICAgIH0KICAgICAgICAgIC8vICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICAgIC8vICAgICB9CiAgICAgICAgICAvLyAgICAgZWxzZSB7CiAgICAgICAgICAvLyAgICAgcmV0dXJuIHZhbHVlOwogICAgICAgICAgLy8gICAgIH0KICAgICAgICAgIC8vIH0KCiAgICAgICAgfQogICAgICB9IC8vIHlBeGlzOlt7CiAgICAgIC8vIH0sewogICAgICAvLyAgICAgYXhpc0xhYmVsOiB7CiAgICAgIC8vICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfXMnCiAgICAgIC8vICAgICB9CiAgICAgIC8vIH1dCgogICAgfTsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0RGF0YTogewogICAgICAgIGNvbHVtbnM6IFsnbmFtZScsICfmmKjml6Xmtojmga/ph48nLCAn5b2T5pel5raI5oGv6YePJywgJ+aYqOaXpeaXtumXtCcsICflvZPml6Xml7bpl7QnXSwKICAgICAgICByb3dzOiBbewogICAgICAgICAgJ25hbWUnOiAn55uR5o6n5raI5oGv5oC76YePJywKICAgICAgICAgICfmmKjml6Xmtojmga/ph48nOiAwLAogICAgICAgICAgJ+W9k+aXpea2iOaBr+mHjyc6IDAKICAgICAgICB9LCB7CiAgICAgICAgICAnbmFtZSc6ICdNUea2iOaBr+mHjycsCiAgICAgICAgICAn5pio5pel5raI5oGv6YePJzogMCwKICAgICAgICAgICflvZPml6Xmtojmga/ph48nOiAwCiAgICAgICAgfSwgewogICAgICAgICAgJ25hbWUnOiAnV1Pmtojmga/ph48nLAogICAgICAgICAgJ+aYqOaXpea2iOaBr+mHjyc6IDAsCiAgICAgICAgICAn5b2T5pel5raI5oGv6YePJzogMAogICAgICAgIH0sIHsKICAgICAgICAgICduYW1lJzogJ+W8guW4uOa2iOaBr+mHjycsCiAgICAgICAgICAn5pio5pel5raI5oGv6YePJzogMCwKICAgICAgICAgICflvZPml6Xmtojmga/ph48nOiAwCiAgICAgICAgfSwgewogICAgICAgICAgJ25hbWUnOiAn5bmz5Z2H6ICX5pe2JywKICAgICAgICAgICfmmKjml6Xml7bpl7QnOiAwLAogICAgICAgICAgJ+W9k+aXpeaXtumXtCc6IDAKICAgICAgICB9LCB7CiAgICAgICAgICAnbmFtZSc6ICfmnIDlpKfogJfml7YnLAogICAgICAgICAgJ+aYqOaXpeaXtumXtCc6IDAsCiAgICAgICAgICAn5b2T5pel5pe26Ze0JzogMAogICAgICAgIH1dCiAgICAgIH0KICAgIH07CiAgfSwKICBwcm9wczogewogICAgbG9hZGluZzogQm9vbGVhbiwKICAgIHJvd3M6IEFycmF5CiAgfSwKICAvL+iuoeeul+WxnuaApyDnsbvkvLzkuo5kYXRh5qaC5b+1CiAgY29tcHV0ZWQ6IHt9LAogIC8v55uR5o6nZGF0YeS4reeahOaVsOaNruWPmOWMlgogIHdhdGNoOiB7CiAgICByb3dzOiBmdW5jdGlvbiByb3dzKG5ld1ZhbCkgewogICAgICBjb25zb2xlLmxvZyhuZXdWYWxbMV1bImFtb3VudCJdKTsKICAgICAgdGhpcy5jaGFydERhdGEucm93c1swXVsn5b2T5pel5raI5oGv6YePJ10gPSBuZXdWYWxbMF1bImFtb3VudCJdOwogICAgICB0aGlzLmNoYXJ0RGF0YS5yb3dzWzBdWyfmmKjml6Xmtojmga/ph48nXSA9IG5ld1ZhbFsxXVsiYW1vdW50Il07CiAgICAgIHRoaXMuY2hhcnREYXRhLnJvd3NbMV1bJ+W9k+aXpea2iOaBr+mHjyddID0gbmV3VmFsWzJdWyJhbW91bnQiXTsKICAgICAgdGhpcy5jaGFydERhdGEucm93c1sxXVsn5pio5pel5raI5oGv6YePJ10gPSBuZXdWYWxbM11bImFtb3VudCJdOwogICAgICB0aGlzLmNoYXJ0RGF0YS5yb3dzWzJdWyflvZPml6Xmtojmga/ph48nXSA9IG5ld1ZhbFs0XVsiYW1vdW50Il07CiAgICAgIHRoaXMuY2hhcnREYXRhLnJvd3NbMl1bJ+aYqOaXpea2iOaBr+mHjyddID0gbmV3VmFsWzVdWyJhbW91bnQiXTsKICAgICAgdGhpcy5jaGFydERhdGEucm93c1szXVsn5b2T5pel5raI5oGv6YePJ10gPSBuZXdWYWxbNl1bImFtb3VudCJdOwogICAgICB0aGlzLmNoYXJ0RGF0YS5yb3dzWzNdWyfmmKjml6Xmtojmga/ph48nXSA9IG5ld1ZhbFs3XVsiYW1vdW50Il07CiAgICAgIHRoaXMuY2hhcnREYXRhLnJvd3NbNF1bJ+W9k+aXpeaXtumXtCddID0gbmV3VmFsWzhdWyJhbW91bnQiXTsKICAgICAgdGhpcy5jaGFydERhdGEucm93c1s0XVsn5pio5pel5pe26Ze0J10gPSBuZXdWYWxbOV1bImFtb3VudCJdOwogICAgICB0aGlzLmNoYXJ0RGF0YS5yb3dzWzVdWyflvZPml6Xml7bpl7QnXSA9IG5ld1ZhbFsxMF1bImFtb3VudCJdOwogICAgICB0aGlzLmNoYXJ0RGF0YS5yb3dzWzVdWyfmmKjml6Xml7bpl7QnXSA9IG5ld1ZhbFsxMV1bImFtb3VudCJdOwogICAgfQogIH0sCiAgLy/mlrnms5Xpm4blkIgKICBtZXRob2RzOiB7fSwKICAvL+eUn+WRveWRqOacnyAtIOWIm+W7uuWujOaIkO+8iOWPr+S7peiuv+mXruW9k+WJjXRoaXPlrp7kvovvvIkKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkge30sCiAgLy/nlJ/lkb3lkajmnJ8gLSDmjILovb3lrozmiJDvvIjlj6/ku6Xorr/pl65ET03lhYPntKDvvIkKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sCiAgYmVmb3JlQ3JlYXRlOiBmdW5jdGlvbiBiZWZvcmVDcmVhdGUoKSB7fSwKICAvL+eUn+WRveWRqOacnyAtIOWIm+W7uuS5i+WJjQogIGJlZm9yZU1vdW50OiBmdW5jdGlvbiBiZWZvcmVNb3VudCgpIHt9LAogIC8v55Sf5ZG95ZGo5pyfIC0g5oyC6L295LmL5YmNCiAgYmVmb3JlVXBkYXRlOiBmdW5jdGlvbiBiZWZvcmVVcGRhdGUoKSB7fSwKICAvL+eUn+WRveWRqOacnyAtIOabtOaWsOS5i+WJjQogIHVwZGF0ZWQ6IGZ1bmN0aW9uIHVwZGF0ZWQoKSB7fSwKICAvL+eUn+WRveWRqOacnyAtIOabtOaWsOS5i+WQjgogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7fSwKICAvL+eUn+WRveWRqOacnyAtIOmUgOavgeS5i+WJjQogIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkKCkge30sCiAgLy/nlJ/lkb3lkajmnJ8gLSDplIDmr4HlrozmiJAKICBhY3RpdmF0ZWQ6IGZ1bmN0aW9uIGFjdGl2YXRlZCgpIHt9IC8v5aaC5p6c6aG16Z2i5pyJa2VlcC1hbGl2Zee8k+WtmOWKn+iDve+8jOi/meS4quWHveaVsOS8muinpuWPkQoKfTs="},{"version":3,"sources":["Histogram.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 柱状图 -->\n<template>\n<div class='histogram'>\n     <div class=\"head\">\n        <span class=\"tittle\">监控消息总量</span>\n        <div class=\"tag\">\n           <div>\n               <div style=\"width:8px;height:8px;background:#73DEB3\"></div>\n               <span>昨日</span> \n           </div>\n           <div >\n               <div style=\"width:8px;height:8px;background:#73A0FA\"></div>\n               <span>当日</span> \n           </div>\n        </div>\n    </div>\n    <ve-histogram :data=\"chartData\" :settings=\"chartSettings\" :extend=\"chartExtend\" v-loading=\"loading\"></ve-histogram>\n    \n</div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n\nexport default {\n//import引入的组件需要注入到对象中才能使用\n    components: {\n\n    },\n    data() {\n        //这里存放数据\n        this.chartSettings = {\n            // itemStyle:{\n            //     color:'#5B8FF9', \n            // },\n            axisSite: { right: ['昨日时间','当日时间'] },\n            yAxisType: ['normal', 'normal'],\n            yAxisName: ['数量', '时间(s)'],\n            label:{\n                show:true,\n                position:'top',\n                formatter: '{c}',\n                color:'#595959'\n            }\n        }\n        this.chartExtend= {\n                series: {\n                    barWidth: 18, //这就是宽度\n                    barGap:'5%',//柱图间距\n                },\n                color: [\"#73DEB3\", \"#5B8FF9\", \"#73DEB3\", \"#5B8FF9\"],\n                grid: {\n                //  x:150,  //左留白\n                    y:35,   //上留白\n                    x2:15,  //右留白\n                    // y2:100  \n                },\n                legend: {\n                    show:false\n                },\n                tooltip:{\n                     show:false,\n                    // axisPointer:{\n                    //     type:false\n                    // }\n                    // formatter: '{b0}: {c0}<br />{b1}: {c1}'\n               \n                },\n                \n                xAxis:{\n                    splitLine:{\n                        show:false\n                    },\n                    axisLabel:{\n                        interval: 0,\n                        textStyle:{\n                            fontSize: 12\n                        },\n                        // formatter: function(value){\n                        //     let result = \"\"; //拼接加\\n返回的类目项\n                        //     let maxLength = 4; //每项显示文字个数\n                        //     let valLength = value.length; //X轴类目项的文字个数\n                        //     let rowNumber = Math.ceil(valLength / maxLength); //类目项需要换行的行数\n                        //     if (rowNumber > 1){\n                        //         //如果文字大于3,\n                        //         for (let i = 0; i < rowNumber; i++) {\n                        //             let temp = \"\"; //每次截取的字符串\n                        //             let start = i * maxLength; //开始截取的位置\n                        //             let end = start + maxLength; //结束截取的位置\n                        //             temp = value.substring(start, end) + \"\\n\";\n                        //             result += temp; //拼接生成最终的字符串\n                        //         }\n                        //         return result;\n                        //     }\n                        //     else {\n                        //     return value;\n                        //     }\n                        // }\n                    }\n                    \n                },\n                // yAxis:[{\n                    \n                // },{\n                //     axisLabel: {\n                //         formatter: '{value}s'\n                //     }\n                // }]\n            }\n        return {\n        chartData: {\n          columns: ['name','昨日消息量','当日消息量','昨日时间','当日时间'],\n          rows: [\n            { 'name': '监控消息总量', '昨日消息量': 0,'当日消息量':0},\n            { 'name': 'MQ消息量', '昨日消息量': 0, '当日消息量':0},\n            { 'name': 'WS消息量', '昨日消息量': 0, '当日消息量':0},\n            { 'name': '异常消息量', '昨日消息量': 0,'当日消息量':0},\n            { 'name': '平均耗时',   '昨日时间': 0,'当日时间':0},\n            { 'name': '最大耗时',   '昨日时间': 0, '当日时间':0}\n          ]\n        }\n        };\n    },\n    props: {\n        loading:Boolean,\n        rows:Array\n    },\n    //计算属性 类似于data概念\n    computed: {\n\n    },\n    //监控data中的数据变化\n    watch: {\n            rows: function(newVal){\n                console.log(newVal[1][\"amount\"]);\n                this.chartData.rows[0]['当日消息量']=newVal[0][\"amount\"];\n                this.chartData.rows[0]['昨日消息量']=newVal[1][\"amount\"];\n\n                this.chartData.rows[1]['当日消息量']=newVal[2][\"amount\"];\n                this.chartData.rows[1]['昨日消息量']=newVal[3][\"amount\"];\n\n                this.chartData.rows[2]['当日消息量']=newVal[4][\"amount\"];\n                this.chartData.rows[2]['昨日消息量']=newVal[5][\"amount\"];\n\n                this.chartData.rows[3]['当日消息量']=newVal[6][\"amount\"];\n                this.chartData.rows[3]['昨日消息量']=newVal[7][\"amount\"];\n\n                this.chartData.rows[4]['当日时间']=newVal[8][\"amount\"];\n                this.chartData.rows[4]['昨日时间']=newVal[9][\"amount\"];\n\n                this.chartData.rows[5]['当日时间']=newVal[10][\"amount\"];\n                this.chartData.rows[5]['昨日时间']=newVal[11][\"amount\"];\n\n          \n        }\n    },\n    //方法集合\n    methods: {\n\n    },\n    //生命周期 - 创建完成（可以访问当前this实例）\n    created() {\n\n    },\n    //生命周期 - 挂载完成（可以访问DOM元素）\n    mounted() {\n\n    },\n    beforeCreate() {}, //生命周期 - 创建之前\n    beforeMount() {}, //生命周期 - 挂载之前\n    beforeUpdate() {}, //生命周期 - 更新之前\n    updated() {}, //生命周期 - 更新之后\n    beforeDestroy() {}, //生命周期 - 销毁之前\n    destroyed() {}, //生命周期 - 销毁完成\n    activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n}\n</script>\n<style lang='less' scoped>\n//@import url(); 引入公共css类\n.histogram{\n    flex: 1;\n    // width:100%;\n    // height:364px;\n    min-width: 360px;\n    background:rgba(255,255,255,1);\n}\n.head{\n    height: 60px;\n    display: flex;\n    justify-content:space-between;\n    align-items: center;\n    margin: 0 24px;\n   \n    .tittle{\n        font-size: 16px;\n        font-family:MicrosoftYaHeiSemibold;\n        color:rgba(38,38,38,1);\n    }\n    .tag{\n        display: flex;\n        justify-content:center;\n        align-items: center;\n        &>div{\n               display: flex;\n                justify-content:center;\n                align-items: center;\n                margin-left: 10px;\n                font-size:12px;\n                font-family:MicrosoftYaHei;\n                color:rgba(140,140,140,1);\n                &>span{\n                    margin-left:5px;\n                }\n        }\n    }\n  \n}\n</style>"],"sourceRoot":"src/components/Dashboard"}]}